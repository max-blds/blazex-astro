---
import CaseCard from "@/layouts/components/case/CaseCard.astro";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { markdownify } from "@/lib/utils/textConverter";
import CallToAction from "@/partials/CallToAction.astro";
import { getCollection, getEntry } from "astro:content";

export async function getStaticPaths() {
  const caseStudies = await getCollection('case-studies');
  
  return caseStudies
    .filter(entry => !entry.id.endsWith('-index.md'))
    .map(entry => ({
      params: { 
        single: entry.id.replace(/^case-studies\//, '').replace(/\.md$/, '')
      },
      props: { entry }
    }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Get next case study for "Check Next Story" section
const allCases = await getCollection('case-studies');
const filteredCases = allCases
  .filter(post => !post.id.endsWith('-index.md'))
  .map(post => ({
    ...post,
    slug: post.id.replace(/^case-studies\//, '').replace(/\.md$/, '')
  }));

const call_to_action = await getEntry("ctaSection", "call-to-action");
---

<Base title={entry.data.title} description={entry.data.description}>
  <section class="section" data-aos="fade-up-sm">
    <div class="container">
      <CaseCard 
        caseItem={{
          ...entry,
          slug: entry.id.replace(/^case-studies\//, '').replace(/\.md$/, '')
        }} 
      />

      <article
        class="bg-theme-light px-14 py-8 lg:px-52 lg:py-24 rounded-2xl"
        data-aos="fade-up-sm"
        data-aos-delay="100"
      >
        <div class="content">
          <Content />
        </div>
      </article>
    </div>
  </section>

  <section class="section pt-0" data-aos="fade-up-sm" data-aos-delay="200">
    <div class="container">
      <h4>Check Next Story</h4>
      {filteredCases.length > 1 && (
        <CaseCard caseItem={filteredCases[1]} color="bg-tertiary" />
      )}
    </div>
  </section>

  {call_to_action?.data && <CallToAction cta={call_to_action.data} />}
</Base>
